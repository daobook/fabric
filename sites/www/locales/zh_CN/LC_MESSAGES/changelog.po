# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022 Jeff Forcier
# This file is distributed under the same license as the Fabric package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Fabric \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-04 01:13+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: ../../changelog.rst:3
msgid "Changelog"
msgstr ""

#: ../../changelog.rst:6
msgid "Looking for the Fabric 1.x changelog? See :doc:`/changelog-v1`."
msgstr ""

#: ../../changelog.rst:9
msgid ""
"Keep in mind that Fabric is largely a thin wrapper around `Paramiko "
"<https://paramiko.org/changelog.html>`_  and `Invoke "
"<https://pyinvoke.org/changelog.html>`_ - just because Fabric itself "
"hasn't had a release in a while doesn't mean its capabilities aren't "
"improving! Click those projects' names in this paragraph to visit their "
"changelogs and see what you might get if you upgrade your dependencies."
msgstr ""

#: ../../changelog.rst:33
msgid ""
":feature:`-` Forward local terminal resizes to the remote end, when "
"applicable. (For the technical: this means we now turn ``SIGWINCH`` into "
"SSH ``window-change`` messages.)"
msgstr ""

#: ../../changelog.rst:19
msgid ""
":feature:`-` Add `~fabric.connection.Connection.shell`, a belated port of"
" the v1 ``open_shell()`` feature."
msgstr ""

#: ../../changelog.rst:22
msgid ""
"This wasn't needed initially, as the modern implementation of "
"`~fabric.connection.Connection.run` is as good or better for full "
"interaction than ``open_shell()`` was, provided you're happy supplying a "
"specific shell to execute."
msgstr ""

#: ../../changelog.rst:26
msgid ""
"`~fabric.connection.Connection.shell` serves the corner case where you "
"*aren't* happy doing that, eg when you're speaking to network appliances "
"or other targets which are not typical Unix server environments."
msgstr ""

#: ../../changelog.rst:29
msgid ""
"Like ``open_shell()``, this new method is primarily for interactive use, "
"and has a slightly less useful return value. See its API docs for more "
"details."
msgstr ""

#: ../../changelog.rst:36
msgid ""
":bug:`2142 major` Update `~fabric.connection.Connection` temporarily so "
"that it doesn't incidentally apply ``replace_env=True`` to local shell "
"commands, only remote ones. On Windows under Python 3.7+, this was "
"causing local commands to fail due to lack of some environment variables."
" Future updates will cleanly separate the config tree for remote vs local"
" methods."
msgstr ""

#: ../../changelog.rst:42
msgid ""
"Thanks to Bartosz Lachowicz for the report and David JM Emmett for the "
"patch."
msgstr ""

#: ../../changelog.rst:17
msgid ""
":support:`-` Overhaul administrative metadata and migrate to Circle-CI "
"from Travis-CI."
msgstr ""

#: ../../changelog.rst:65
msgid ""
":feature:`1999` Add `sudo <fabric.group.Group.sudo>` support to "
"`~fabric.group.Group`. Thanks to Bonnie Hardin for the report and to "
"Winston Nolan for an early patchset."
msgstr ""

#: ../../changelog.rst:63
msgid ""
":feature:`1810` Add `put <fabric.group.Group.put>`/`get "
"<fabric.group.Group.get>` support to `~fabric.group.Group`."
msgstr ""

#: ../../changelog.rst:56
msgid ""
":feature:`1868` Ported a feature from v1: interpolating the local path "
"argument in  `Transfer.get <fabric.transfer.Transfer.get>` with "
"connection and remote filepath attributes."
msgstr ""

#: ../../changelog.rst:60
msgid ""
"For example, ``cxn.get(remote=\"/var/log/foo.log\", local=\"{host}/\")`` "
"is now feasible for storing a file in per-host-named directories or "
"files, and in fact `Group.get <fabric.group.Group.get>` does this by "
"default."
msgstr ""

#: ../../changelog.rst:49
msgid ""
":feature:`-` When the ``local`` path argument to `Transfer.get "
"<fabric.transfer.Transfer.get>` contains nonexistent directories, they "
"are now created instead of raising an error."
msgstr ""

#: ../../changelog.rst:54
msgid "This change introduces a new runtime dependency: ``pathlib2``."
msgstr ""

#: ../../changelog.rst:44
msgid ""
":bug:`- major` Fix a handful of issues in the handling and mocking of "
"SFTP local paths and ``os.path`` members within :ref:`fabric.testing "
"<testing-subpackage>`; this should remove some occasional \"useless "
"Mocks\" as well as hewing closer to the real behavior of things like "
"``os.path.abspath`` re: path normalization."
msgstr ""

#: ../../changelog.rst:92
msgid ""
":feature:`1989` Reinstate command timeouts, by supporting the "
"implementation of that feature in Invoke (`pyinvoke/invoke#539 "
"<https://github.com/pyinvoke/invoke/issues/539>`_). Thanks to Israel "
"Fruchter for report and early patchset."
msgstr ""

#: ../../changelog.rst:89
msgid ""
":feature:`-` Allow specifying connection timeouts (already available via "
"`~fabric.connection.Connection` constructor argument and configuration "
"option) on the command-line, via :option:`-t/--connect-timeout <-t>`."
msgstr ""

#: ../../changelog.rst:70
msgid ""
":feature:`1985` Add support for explicitly closing remote subprocess' "
"stdin when local stdin sees an EOF, by implementing a new command-runner "
"method recently added to Invoke; this prevents remote programs that "
"'follow' stdin from blocking forever."
msgstr ""

#: ../../changelog.rst:74
msgid ""
":bug:`- major` Anonymous/'remainder' subprocess execution (eg ``fab -H "
"host -- command``, as opposed to the use of `Connection.run "
"<fabric.connection.Connection.run>` inside tasks) was explicitly "
"specifying ``in_stream=False`` (i.e. \"disconnect from stdin\") under the"
" hood; this was leftover from early development and prevented use of "
"interactive (or other stdin-reading) programs via this avenue."
msgstr ""

#: ../../changelog.rst:81
msgid ""
"It has been removed; ``cat 'text' | fab -H somehost -- reads-from-stdin``"
" (or similar use cases) should work again."
msgstr ""

#: ../../changelog.rst:83
msgid ""
":support:`-` Removed unnecessary Cryptography version pin from packaging "
"metadata; this was an artifact from early development. At this point in "
"time, only Paramiko's own direct dependency specification should matter."
msgstr ""

#: ../../changelog.rst:87
msgid ""
"This is unlikely to affect anybody's install, since Paramiko has required"
" newer Cryptography versions for a number of years now."
msgstr ""

#: ../../changelog.rst:69
msgid ":support:`-` Update minimum Invoke version requirement to ``>=1.3``."
msgstr ""

#: ../../changelog.rst:109
msgid ""
":feature:`1709` Add `Group.close <fabric.group.Group.close>` to allow "
"closing an entire group's worth of connections at once. Patch via "
"Johannes Löthberg."
msgstr ""

#: ../../changelog.rst:106
msgid ""
":feature:`1780` Add context manager behavior to `~fabric.group.Group`, to"
" match the same feature in `~fabric.connection.Connection`. Feature "
"request by István Sárándi."
msgstr ""

#: ../../changelog.rst:101
msgid ""
":feature:`1849` Add `Connection.from_v1 "
"<fabric.connection.Connection.from_v1>` (and `Config.from_v1 "
"<fabric.config.Config.from_v1>`) for easy creation of modern "
"``Connection``/``Config`` objects from the currently configured Fabric "
"1.x environment. Should make upgrading piecemeal much easier for many use"
" cases."
msgstr ""

#: ../../changelog.rst:122
msgid ""
":bug:`1852` Grant internal `~fabric.connection.Connection` objects "
"created during ``ProxyJump`` based gateways/proxies a copy of the outer "
"``Connection``'s configuration object. This was not previously done, "
"which among other things meant one could not fully disable SSH config "
"file loading (as the internal ``Connection`` objects would revert to the "
"default behavior). Thanks to Chris Adams for the report."
msgstr ""

#: ../../changelog.rst:119
msgid ""
":bug:`-` Some debug logging was reusing Invoke's logger object, "
"generating log messages \"named\" after ``invoke`` instead of ``fabric``."
" This has been fixed by using Fabric's own logger everywhere instead."
msgstr ""

#: ../../changelog.rst:115
msgid ""
":bug:`1850` Skip over ``ProxyJump`` configuration directives in SSH "
"config data when they would cause self-referential ``RecursionError`` "
"(e.g. due to wildcard-using ``Host`` stanzas which include the jump "
"server itself). Reported by Chris Adams."
msgstr ""

#: ../../changelog.rst:111
msgid ""
":bug:`-` Fix a bug preventing tab completion (using the Invoke-level "
"``--complete`` flag) from completing task names correctly (behavior was "
"to act as if there were never any tasks present, even if there was a "
"valid fabfile nearby)."
msgstr ""

#: ../../changelog.rst:129
msgid ""
":bug:`- (2.3+)` Update the new functionality added for :issue:`1826` so "
"it uses ``export``; without this, nontrivial shell invocations like "
"``command1 && command2`` end up only applying the env vars to the first "
"command."
msgstr ""

#: ../../changelog.rst:155
msgid ""
":feature:`1831` Grant `~fabric.group.Group` (and subclasses) the ability "
"to take arbitrary keyword arguments and pass them onto the internal "
"`~fabric.connection.Connection` constructors. This allows code such as::"
msgstr ""

#: ../../changelog.rst:161
msgid ""
"which was previously impossible without manually stuffing premade "
"``Connection`` objects into `Group.from_connections "
"<fabric.group.Group.from_connections>`."
msgstr ""

#: ../../changelog.rst:133
msgid ""
":feature:`1826` Add a new Boolean configuration and "
"`~fabric.connection.Connection` parameter, ``inline_ssh_env``, which "
"(when set to ``True``) changes how Fabric submits shell environment "
"variables to remote servers; this feature helps work around commonly "
"restrictive ``AcceptEnv`` settings on SSH servers. Thanks to Massimiliano"
" Torromeo and Max Arnold for the reports."
msgstr ""

#: ../../changelog.rst:169
msgid ""
":support:`1653 backported` Clarify `~fabric.transfer.Transfer` API docs "
"surrounding remote file paths, such as the lack of tilde expansion (a "
"buggy and ultimately unnecessary v1 feature). Thanks to ``@pint12`` for "
"bringing it up."
msgstr ""

#: ../../changelog.rst:146
msgid ""
":support:`1819 backported` Moved example code from the README into the "
"Sphinx landing page so that we could apply doctests; includes a bunch of "
"corrections to invalid example code! Thanks to Antonio Feitosa for the "
"initial catch & patch."
msgstr ""

#: ../../changelog.rst:164
msgid ""
":bug:`1762` Fix problem where lower configuration levels' setting of "
"``connect_kwargs.key_filename`` were being overwritten by the CLI "
"``--identity`` flag's value...even when that value was the empty list. "
"CLI-given values are supposed to win, but not quite that hard. Reported "
"by ``@garu57``."
msgstr ""

#: ../../changelog.rst:150
msgid ""
":bug:`1749` Improve `~fabric.transfer.Transfer.put` behavior when "
"uploading to directory (vs file) paths, which was documented as working "
"but had not been fully implemented. The local path's basename (or file-"
"like objects' ``.name`` attribute) is now appended to the remote path in "
"this case. Thanks to Peter Uhnak for the report."
msgstr ""

#: ../../changelog.rst:142
msgid ""
":bug:`-` Implement ``__lt__`` on `~fabric.connection.Connection` so it "
"can be sorted; this was overlooked when implementing things like "
"``__eq__`` and ``__hash__``. (No, sorting doesn't usually matter much for"
" this object type, but when you gotta, you gotta...)"
msgstr ""

#: ../../changelog.rst:174
msgid ""
":bug:`1824` The changes implementing :issue:`1772` failed to properly "
"account for backwards compatibility with Invoke-level task objects. This "
"has been fixed; thanks to ``@ilovezfs`` and others for the report."
msgstr ""

#: ../../changelog.rst:198
msgid ""
":feature:`1766` Reinstate support for use as ``python -m fabric``, which "
"(as in v1) now behaves identically to invoking ``fab``. Thanks to "
"``@RupeshPatro`` for the original patchset."
msgstr ""

#: ../../changelog.rst:184
msgid ""
":feature:`1772` ``@hosts`` is back -- as a `@task "
"<fabric.tasks.task>`/`Task <fabric.tasks.Task>` parameter of the same "
"name. Acts much like a per-task :option:`--hosts`, but can optionally "
"take dicts of `fabric.connection.Connection` kwargs as well as the "
"typical shorthand host strings."
msgstr ""

#: ../../changelog.rst:191
msgid ""
"As of this change, we are now recommending the use of the new-in-this-"
"release Fabric-level `@task <fabric.tasks.task>`/`Task "
"<fabric.tasks.Task>` objects instead of their Invoke counterparts, even "
"if you're not using the ``hosts`` kwarg -- it will help future-proof your"
" code for similar feature-adds later, and generally be less confusing "
"than having mixed Invoke/Fabric imports for these object types."
msgstr ""

#: ../../changelog.rst:183
msgid ":support:`-` Updated the minimum required Invoke version to ``1.1``."
msgstr ""

#: ../../changelog.rst:201
msgid ""
":bug:`1753` Set one of our test modules to skip user/system SSH config "
"file loading by default, as it was too easy to forget to do so for tests "
"aimed at related functionality. Reported by Chris Rose."
msgstr ""

#: ../../changelog.rst:180
msgid ""
":bug:`-` The `fabric.testing.fixtures.remote` pytest fixture was found to"
" not be properly executing expectation/sanity tests on teardown; this was"
" an oversight and has been fixed."
msgstr ""

#: ../../changelog.rst:215
msgid ""
":bug:`-` Somehow neglected to actually add ``extras_require`` to our "
"``setup.py`` to enable ``pip install fabric[testing]`` et al. This has "
"been fixed. We hope."
msgstr ""

#: ../../changelog.rst:212
msgid ""
":bug:`-` Minor fix to ``extras_require`` re: having ``fabric[pytest]`` "
"encompass the contents of ``fabric[testing]``."
msgstr ""

#: ../../changelog.rst:208
msgid ""
":bug:`-` Our ``packages=`` argument to ``setuptools.setup`` was too "
"specific and did not allow for subpackages...such as the newly added "
"``fabric.testing``. Fixed now."
msgstr ""

#: ../../changelog.rst:205
msgid ""
":bug:`-` Our packaging metadata lacked a proper ``MANIFEST.in`` and thus "
"some distributions were not including ancillary directories like tests "
"and documentation. This has been fixed."
msgstr ""

#: ../../changelog.rst:220
msgid ""
":feature:`-` Exposed our previously internal test helpers for use by "
"downstream test suites, as the :ref:`fabric.testing <testing-subpackage>`"
" subpackage."
msgstr ""

#: ../../changelog.rst:225
msgid ""
"As this code requires non-production dependencies, we've also updated our"
" packaging metadata to publish some setuptools \"extras\", "
"``fabric[testing]`` (base) and ``fabric[pytest]`` (for pytest users)."
msgstr ""

#: ../../changelog.rst:233
msgid ""
":support:`1745 backported` Wrap any imports of ``invoke.vendor.*`` with "
"``try``/``except`` such that downstream packages which have removed "
"``invoke.vendor`` are still able to function by using stand-alone "
"dependencies. Patch courtesy of Othmane Madjoudj."
msgstr ""

#: ../../changelog.rst:231
msgid ""
":support:`1759 backported` Apply the ``black`` code formatter to the "
"codebase and engage it on Travis-CI. Thanks to Chris Rose."
msgstr ""

#: ../../changelog.rst:229
msgid ""
":support:`1761 backported` Integration tests were never added to Travis "
"or ported to pytest before 2.0's release; this has been addressed."
msgstr ""

#: ../../changelog.rst:238
msgid ""
":bug:`1740` A Python 3 wheel was not uploaded during the previous release"
" as expected; it turned out we were lacking the typical 'build universal "
"wheels' setting in our ``setup.cfg`` (due to copying it from the one "
"other project in our family of projects which explicitly cannot build "
"universal wheels!) This has been fixed and a proper universal wheel is "
"now built."
msgstr ""

#: ../../changelog.rst:244
msgid ":feature:`-` Rewrite for 2.0! See :ref:`upgrading`."
msgstr ""

